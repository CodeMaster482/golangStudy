definitions:
  ds.Banknote:
    properties:
      banknote_id:
        type: integer
      currency:
        type: string
      description:
        type: string
      image_url:
        type: string
      nominal:
        type: number
      status:
        type: string
    type: object
  ds.BanknoteList:
    properties:
      banknotes_list:
        items:
          $ref: '#/definitions/ds.Banknote'
        type: array
      draft_id:
        type: integer
    type: object
  ds.LoginSwaggerResp:
    properties:
      access_token:
        type: string
      expires_in:
        type: string
      token_type:
        type: string
    type: object
  ds.NewStatus:
    properties:
      operation_id:
        type: integer
      status:
        type: string
    type: object
  ds.Operation:
    properties:
      comletion_at:
        type: string
      crated_at:
        type: string
      formation_at:
        type: string
      is_income:
        type: string
      moderator:
        $ref: '#/definitions/ds.User'
      moderator_id:
        type: integer
      operation_banknote:
        items:
          $ref: '#/definitions/ds.OperationBanknote'
        type: array
      operation_id:
        type: integer
      status:
        type: string
      status_check:
        type: string
      user:
        $ref: '#/definitions/ds.User'
      user_id:
        type: integer
    type: object
  ds.OperationBanknote:
    properties:
      banknote:
        $ref: '#/definitions/ds.Banknote'
      banknote_id:
        type: integer
      operation_id:
        type: integer
      opration:
        $ref: '#/definitions/ds.Operation'
      opration_banknote_id:
        type: integer
      quantity:
        type: integer
    type: object
  ds.RegisterReq:
    properties:
      login:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  ds.Role:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Buyer
    - Moderator
    - Admin
  ds.User:
    properties:
      balance:
        type: number
      login:
        type: string
      name:
        type: string
      password:
        type: string
      registrationDate:
        type: string
      role:
        $ref: '#/definitions/ds.Role'
      user_id:
        type: integer
    type: object
  handler.errorResp:
    properties:
      error_description:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/banknotes:
    delete:
      consumes:
      - application/json
      description: Deletes a banknote with the given ID
      parameters:
      - description: Banknote ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
      summary: Delete banknote by ID
      tags:
      - Banknotes
    get:
      consumes:
      - application/json
      description: Banknotes List
      parameters:
      - description: Query string to filter banknotes by nominal
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.BanknoteList'
        "500":
          description: Internal Server Error
          schema: {}
      summary: Banknotes List
      tags:
      - Banknotes
    post:
      consumes:
      - multipart/form-data
      description: Add a new banknote with image, nominal, currency
      parameters:
      - description: Banknote image
        in: formData
        name: image
        required: true
        type: file
      - description: Banknote nominal
        in: formData
        name: nominal
        required: true
        type: string
      - description: Banknote description
        in: formData
        name: description
        type: string
      - description: Banknote currency
        in: formData
        name: currency
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Add new banknote
      tags:
      - Banknotes
  /api/banknotes/:
    put:
      consumes:
      - multipart/form-data
      description: Updates a banknote with the given ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: nominal
        in: formData
        name: name
        type: string
      - description: description
        in: formData
        name: description
        type: string
      - description: currency
        in: formData
        name: IIN
        type: string
      - description: image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
      summary: Update banknote by ID
      tags:
      - Banknotes
  /api/banknotes/{id}:
    get:
      consumes:
      - application/json
      description: Banknote By ID
      parameters:
      - description: Banknotes ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.Banknote'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Banknotes By ID
      tags:
      - Banknotes
  /api/operation:
    get:
      consumes:
      - application/json
      description: Retrieves a list of Operation requests based on the provided parameters
      parameters:
      - description: Operation request status
        in: query
        name: status_id
        type: string
      - description: Start date in the format '2006-01-02T15:04:05Z'
        in: query
        name: start_date
        type: string
      - description: End date in the format '2006-01-02T15:04:05Z'
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ds.Operation'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get list of Operation requests
      tags:
      - Operations
  /api/user/logout:
    get:
      consumes:
      - application/json
      description: Завершение сеанса текущего пользователя.
      produces:
      - application/json
      responses:
        "200":
          description: Успешный выход
          schema:
            type: string
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/handler.errorResp'
        "401":
          description: Неверные учетные данные
          schema:
            $ref: '#/definitions/handler.errorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.errorResp'
      security:
      - ApiKeyAuth: []
      summary: Выход пользователя
      tags:
      - Пользователи
  /api/user/signIn:
    post:
      consumes:
      - application/json
      description: Вход нового пользователя.
      parameters:
      - description: Детали входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ds.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная аутентификация
          schema:
            $ref: '#/definitions/ds.LoginSwaggerResp'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/handler.errorResp'
        "401":
          description: Неверные учетные данные
          schema:
            $ref: '#/definitions/handler.errorResp'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.errorResp'
      summary: Аутентификация пользователя
      tags:
      - Пользователи
  /api/user/signUp:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя.
      parameters:
      - description: Детали регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ds.RegisterReq'
      produces:
      - application/json
      responses: {}
      summary: Регистрация пользователя
      tags:
      - Пользователи
  /banknotes/request:
    post:
      consumes:
      - application/json
      description: Adds a banknote to a operation request
      parameters:
      - description: Threat ID
        in: path
        name: threatId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
      summary: Add banknote to request
      tags:
      - Banknotes
  /operation/updateStatus:
    put:
      consumes:
      - application/json
      description: Updates the status of a operation request with the given ID on
        "завершен"/"отклонен"
      parameters:
      - description: Request ID
        in: path
        name: id
        required: true
        type: integer
      - description: update status
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/ds.NewStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
      summary: Update operation request status by ID
      tags:
      - Operation
swagger: "2.0"
